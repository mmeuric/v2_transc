# Compose overlay for monitoring stack. Use with:
#   docker compose -f docker-compose.yml -f infra/monitoring/docker-compose.monitoring.yml up -d

services:
  prometheus:
    image: prom/prometheus:v2.55.0
    container_name: prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.retention.time=${PROM_RETENTION_TIME:-15d}"
      - "--storage.tsdb.retention.size=${PROM_RETENTION_SIZE:-10GB}"
      - "--web.external-url=${PROM_EXTERNAL_URL:-}"
      - "--web.enable-admin-api"
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./infra/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./infra/monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    depends_on:
      - node-exporter
      - cadvisor
      - blackbox
    networks:
      - default

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    restart: unless-stopped
    command: ["--config.file=/etc/alertmanager/alertmanager.yml", "--storage.path=/alertmanager"]
    ports:
      - "9093:9093"
    volumes:
      - alertmanager_data:/alertmanager
      - ./infra/monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    networks:
      - default

  grafana:
    image: grafana/grafana:11.1.4
    container_name: grafana
    restart: unless-stopped
    user: "0"
    env_file:
      - ./.env
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - "3010:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./infra/monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - default

  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    restart: unless-stopped
    pid: host
    network_mode: host
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  blackbox:
    image: prom/blackbox-exporter:v0.25.0
    container_name: blackbox
    restart: unless-stopped
    ports:
      - "9115:9115"
    volumes:
      - ./infra/monitoring/blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
