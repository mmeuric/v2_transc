# logstash.conf — Pino (Fastify) normalization (ECS-ish)

input {
  beats { port => 5044 }
}

filter {
  # JSON de secours si Filebeat n'a pas parsé
  if [message] and [message] =~ '^\s*\{\"' and ![level] and ![msg] and ![req] {
    json { source => "message" target => "" }
  }

  # service.name depuis labels Docker si manquant
  if ![service][name] and [container][labels][com_docker_compose_service] {
    mutate { add_field => { "[service][name]" => "%{[container][labels][com_docker_compose_service]}" } }
  }

  # @timestamp depuis Pino "time"
  if [time] {
    if [time] =~ "^\d+$" {
      date { match => [ "time", "UNIX_MS" ] target => "@timestamp" timezone => "UTC" }
    } else {
      date { match => [ "time", "ISO8601" ] target => "@timestamp" timezone => "UTC" }
    }
  }

  # log.level depuis Pino level
  if [level] and ![log][level] { mutate { add_field => { "[log][level]" => "%{[level]}" } } }
  if [log][level] { mutate { lowercase => [ "[log][level]" ] } }

  # message lisible si msg présent
  if [msg] { mutate { replace => { "message" => "%{[msg]}" } } }

  # Mapper champs à plat -> req./res.
  if [method] and ![req][method] { mutate { add_field => { "[req][method]" => "%{[method]}" } } }
  if [url] and ![req][url]       { mutate { add_field => { "[req][url]"    => "%{[url]}"    } } }
  if [statusCode] and ![res][statusCode] {
    mutate { add_field => { "[res][statusCode]" => "%{[statusCode]}" } }
    mutate { convert   => { "[res][statusCode]" => "integer" } }
  }

  # event.action: http_access dès qu'on voit une requête
  if ![event][action] and ([req][method] or [method]) {
    mutate { add_field => { "[event][action]" => "http_access" } }
  }

  # pino.event (renommé par Filebeat) -> event.action si encore vide
  if [pino][event] and ![event][action] {
    mutate { add_field => { "[event][action]" => "%{[pino][event]}" } }
  }

  # event.dataset par défaut
  if ![event][dataset] and [service][name] {
    mutate { add_field => { "[event][dataset]" => "%{[service][name]}" } }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "${ELASTIC_USER:elastic}"
    password => "${ELASTIC_PASSWORD}"
    index => "filebeat-%{+YYYY.MM.dd}"
  }
}
